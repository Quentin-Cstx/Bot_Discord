"""
Admin cog for Discord bot, providing admin-only commands and error handling.
"""

import sys
import os
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

import discord
from discord.ext import commands
from discord import app_commands
from config import DISCORD_GUILD_ID

class Admin(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        
        
    @app_commands.default_permissions(administrator=True)
    @app_commands.guilds(discord.Object(id=DISCORD_GUILD_ID))
    @app_commands.command(name="secret", description="Commande r√©serv√©e aux admins")
    async def secret_command(self, interaction: discord.Interaction):
        await interaction.response.send_message("‚úÖ Tu es admin, acc√®s accord√© !")
        
        
        
    @app_commands.default_permissions(manage_messages=True)
    @app_commands.guilds(discord.Object(id=DISCORD_GUILD_ID))
    @app_commands.command(name="clear", description="Supprimer des messages dans un salon")
    @app_commands.describe(amount="Nombre de messages √† supprimer")
    async def clear(self, interaction: discord.Interaction, amount: int):
        """
        Commande : /clear
        
        Cette commande permet de supprimer un certain nombre de messages dans le salon actuel.

        Param√®tres :
        - `amount` : Le nombre de messages √† supprimer (doit √™tre un entier positif).

        Permissions requises :
        - L'utilisateur doit avoir la permission de g√©rer les messages dans le salon.

        R√©ponse :
        - La commande r√©pondra avec un message indiquant le nombre de messages supprim√©s.
        """
        await interaction.response.defer(ephemeral=True)  # Diff√®re la r√©ponse AVANT purge
        deleted = await interaction.channel.purge(limit=amount)
        await interaction.followup.send(f"üßπ {len(deleted)} messages supprim√©s.", ephemeral=True)

    
    
    @app_commands.guilds(discord.Object(id=DISCORD_GUILD_ID))
    @app_commands.command(name="lock", description="Verrouiller un salon")
    @app_commands.checks.has_permissions(manage_channels=True)
    async def lock(self, interaction: discord.Interaction):
        """
        Commande : /lock
        
        Cette commande permet de verrouiller le salon actuel, emp√™chant les utilisateurs de poster des messages.

        Permissions requises :
        - L'utilisateur doit avoir la permission de g√©rer les salons dans le serveur.

        R√©ponse :
        - La commande r√©pondra avec un message indiquant que le salon a √©t√© verrouill√©.
        """
        overwrite = interaction.channel.overwrites_for(interaction.guild.default_role)
        overwrite.send_messages = False
        await interaction.channel.set_permissions(interaction.guild.default_role, overwrite=overwrite)
        await interaction.response.send_message("üîí Salon verrouill√©.")



    @app_commands.guilds(discord.Object(id=DISCORD_GUILD_ID))
    @app_commands.command(name="unlock", description="D√©verrouiller un salon")
    @app_commands.checks.has_permissions(manage_channels=True)
    async def unlock(self, interaction: discord.Interaction):
        """
        Commande : /unlock
        
        Cette commande permet de d√©verrouiller le salon actuel, permettant aux utilisateurs de poster des messages.

        Permissions requises :
        - L'utilisateur doit avoir la permission de g√©rer les salons dans le serveur.

        R√©ponse :
        - La commande r√©pondra avec un message indiquant que le salon a √©t√© d√©verrouill√©.
        """
        overwrite = interaction.channel.overwrites_for(interaction.guild.default_role)
        overwrite.send_messages = None
        await interaction.channel.set_permissions(interaction.guild.default_role, overwrite=overwrite)
        await interaction.response.send_message("üîì Salon d√©verrouill√©.")
    
    @app_commands.guilds(discord.Object(id=DISCORD_GUILD_ID))
    @app_commands.command(name="togglefeur", description="Active ou d√©sactive la r√©ponse 'FEUR' pour les messages")
    @app_commands.checks.has_permissions(administrator=True)
    @app_commands.describe(toggle="Activer ou d√©sactiver la r√©ponse 'FEUR'")
    async def togglefeur(self, interaction: discord.Interaction, toggle: bool):
        """
        Commande : /togglefeur
        
        Cette commande permet d'activer ou de d√©sactiver la r√©ponse "FEUR" pour les messages contenant "quoi" ou "quoi?".

        Param√®tres :
        - `toggle` : Un bool√©en pour activer (True) ou d√©sactiver (False) la r√©ponse "FEUR".

        Permissions requises :
        - L'utilisateur doit avoir la permission d'administrateur dans le serveur.

        R√©ponse :
        - La commande r√©pondra avec un message indiquant si la r√©ponse "FEUR" est activ√©e ou d√©sactiv√©e.
        """
        self.bot.toggle_feur = toggle
        status = "activ√©e" if toggle else "d√©sactiv√©e"
        await interaction.response.send_message(f"R√©ponse 'FEUR' {status}.", ephemeral=True)
        
    
    
    
    @app_commands.guilds(discord.Object(id=DISCORD_GUILD_ID))
    @app_commands.command(name="shutdown", description="√âteindre le bot")
    @app_commands.checks.has_permissions(administrator=True)
    async def shutdown(self, interaction: discord.Interaction):
        """
        Commande : /shutdown
        
        Cette commande permet d'√©teindre le bot.

        Permissions requises :
        - L'utilisateur doit avoir la permission d'administrateur dans le serveur.

        R√©ponse :
        - La commande r√©pondra avec un message indiquant que le bot s'√©teint.
        """
        await interaction.response.send_message("üîå Bot en cours d'arr√™t...")
        await self.bot.close()


                
async def setup(bot):
    """Adds the Admin cog to the bot."""
    await bot.add_cog(Admin(bot))
